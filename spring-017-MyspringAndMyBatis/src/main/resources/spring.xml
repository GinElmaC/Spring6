<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

   <!-- - 组件扫描
    - 引入外部的属性文件
    - 德鲁伊数据源
    - SqlSessionFactoryBean配置
    - 注入mybatis核心配置文件路径
    - 指定别名包
    - 注入数据源
    - Mapper扫描配置器
    - 指定扫描的包
    - 事务管理器DataSourceTransactionManager
    - 注入数据源
    - 启用事务注解
    - 注入事务管理器-->
    <!--扫盘-->
    <context:component-scan base-package="com.GinElmaC.Service"/>
    <!--引入外部文件-->
    <context:property-placeholder location="jdbc.properties"/>
    <!--配置数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!--这个Bean是MyBatis给我们提供的-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="MyBatis-config.xml"/>
        <property name="typeAliasesPackage" value="com.GinElmaC.Pojo"/>
    </bean>
    <!--Mapper扫描配置器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.GinElmaC.Mapper"/>
    </bean>
    <!--事务管理器-->
    <bean id="txManage" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--启动事务注解-->
    <tx:annotation-driven transaction-manager="txManage"/>



</beans>